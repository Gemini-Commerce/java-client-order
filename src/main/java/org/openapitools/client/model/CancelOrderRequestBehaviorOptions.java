/*
 * order Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BehaviorOptionsInventory;
import org.openapitools.client.model.CancelOrderRequestBehaviorOptionsPayment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import GeminiCommerce_Order.JSON;

/**
 * CancelOrderRequestBehaviorOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-12T15:15:23.622602582Z[Etc/UTC]")
public class CancelOrderRequestBehaviorOptions {
  public static final String SERIALIZED_NAME_INVENTORY = "inventory";
  @SerializedName(SERIALIZED_NAME_INVENTORY)
  private BehaviorOptionsInventory inventory;

  public static final String SERIALIZED_NAME_PAYMENT = "payment";
  @SerializedName(SERIALIZED_NAME_PAYMENT)
  private CancelOrderRequestBehaviorOptionsPayment payment;

  public CancelOrderRequestBehaviorOptions() {
  }

  public CancelOrderRequestBehaviorOptions inventory(BehaviorOptionsInventory inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @javax.annotation.Nullable
  public BehaviorOptionsInventory getInventory() {
    return inventory;
  }

  public void setInventory(BehaviorOptionsInventory inventory) {
    this.inventory = inventory;
  }


  public CancelOrderRequestBehaviorOptions payment(CancelOrderRequestBehaviorOptionsPayment payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @javax.annotation.Nullable
  public CancelOrderRequestBehaviorOptionsPayment getPayment() {
    return payment;
  }

  public void setPayment(CancelOrderRequestBehaviorOptionsPayment payment) {
    this.payment = payment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CancelOrderRequestBehaviorOptions cancelOrderRequestBehaviorOptions = (CancelOrderRequestBehaviorOptions) o;
    return Objects.equals(this.inventory, cancelOrderRequestBehaviorOptions.inventory) &&
        Objects.equals(this.payment, cancelOrderRequestBehaviorOptions.payment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inventory, payment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CancelOrderRequestBehaviorOptions {\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("inventory");
    openapiFields.add("payment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CancelOrderRequestBehaviorOptions
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CancelOrderRequestBehaviorOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CancelOrderRequestBehaviorOptions is not found in the empty JSON string", CancelOrderRequestBehaviorOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CancelOrderRequestBehaviorOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CancelOrderRequestBehaviorOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `inventory`
      if (jsonObj.get("inventory") != null && !jsonObj.get("inventory").isJsonNull()) {
        BehaviorOptionsInventory.validateJsonElement(jsonObj.get("inventory"));
      }
      // validate the optional field `payment`
      if (jsonObj.get("payment") != null && !jsonObj.get("payment").isJsonNull()) {
        CancelOrderRequestBehaviorOptionsPayment.validateJsonElement(jsonObj.get("payment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CancelOrderRequestBehaviorOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CancelOrderRequestBehaviorOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CancelOrderRequestBehaviorOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CancelOrderRequestBehaviorOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<CancelOrderRequestBehaviorOptions>() {
           @Override
           public void write(JsonWriter out, CancelOrderRequestBehaviorOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CancelOrderRequestBehaviorOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CancelOrderRequestBehaviorOptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CancelOrderRequestBehaviorOptions
  * @throws IOException if the JSON string is invalid with respect to CancelOrderRequestBehaviorOptions
  */
  public static CancelOrderRequestBehaviorOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CancelOrderRequestBehaviorOptions.class);
  }

 /**
  * Convert an instance of CancelOrderRequestBehaviorOptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

